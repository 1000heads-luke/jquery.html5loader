{"name":"Jquery.html5loader","tagline":"jQuery.html5Loader can preload images, html5 video and audio sources, script and text files. This plugin needs a JSON file to get the files that it has to preload, and it provides an easy API to communicate the state of loading.","body":"# Introduction\r\njQuery.html5Loader can preload <b>images</b>, html5 <b>video</b> and <b>audio</b> sources, <b>script</b> and <b>text</b> files.\r\nThis plugin needs a <b>JSON</b> file to get the files that it has to preload (or at least you can use also a javascript object), and it provides an easy API to communicate the state of loading.\r\n\r\n\r\n## Features\r\n* <b>smart</b>: it loads just the sources supported by the client running the script.\r\n* <b>flexible</b>: it returns the current percentage and the object loaded, so you could be free to show this info as you like\r\n* <b>fun</b>: inside the package you could find some preloading animation examples, customizable and ready to use\r\n\r\n\r\n\r\n\r\n## Demo\r\nhttps://gianlucaguarini.github.com/jquery.html5loader/\r\n\r\n## jQuery.html5loader in production\r\n- http://www.mobi-myhome.ch\r\n- http://lindberghallee.ch\r\n\r\n# USAGE\r\n\r\n### 1 Create a JSON file like this, containing all the files you need to preload ( size in bytes ):\r\n\r\n<pre><code>\r\n{\r\n\t\t\"files\": [\r\n\t\t\t{\r\n\t\t\t\t\"type\":\"SCRIPT\",\r\n\t\t\t\t\"source\":\"../path/to/your/script.js\",\r\n\t\t\t\t\"size\":4.096\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"type\":\"IMAGE\",\r\n\t\t\t\t\"source\":\"../path/to/your/image.jpg\",\r\n\t\t\t\t\"size\":620\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"type\":\"TEXT\",\r\n\t\t\t\t\"source\":\"../path/to/your/text.txt\",\r\n\t\t\t\t\"size\":44\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"type\":\"VIDEO\",\r\n\t\t\t\t\"sources\": {\r\n\t\t\t\t\t\"webm\":{\r\n\t\t\t\t\t\t\"source\":\"../path/to/your/video.webm\",\r\n\t\t\t\t\t\t\"size\":5054.976\r\n\t\t\t\t\t},\r\n\t\t\t\t\t\"ogg\":{\r\n\t\t\t\t\t\t\"source\":\"../path/to/your/video.ogg\",\r\n\t\t\t\t\t\t\"size\":2932.736\r\n\t\t\t\t\t},\r\n\t\t\t\t\t\"mp4\":{\r\n\t\t\t\t\t\t\"source\":\"../path/to/your/video.mp4\",\r\n\t\t\t\t\t\t\"size\":9285.632\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"type\":\"AUDIO\",\r\n\t\t\t\t\"sources\": {\r\n\t\t\t\t\t\"mp3\":{\r\n\t\t\t\t\t\t\"source\":\"../path/to/your/audio.mp3\",\r\n\t\t\t\t\t\t\"size\":9285.632\r\n\t\t\t\t\t},\r\n\t\t\t\t\t\"ogg\":{\r\n\t\t\t\t\t\t\"source\":\"../path/to/your/audio.ogg\",\r\n\t\t\t\t\t\t\"size\":2089.688\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t]\r\n\t}\r\n</code></pre>\r\n\r\n### 2 Import the plugin into your page:\r\n<pre><code>\r\n&lt;script src=&quot;http://code.jquery.com/jquery-latest.min.js&quot;&gt;&lt;/script&gt;\r\n&lt;script src=&quot;../js/jQuery.html5Loader.js&quot;&gt;&lt;/script&gt;\r\n\r\n</code></pre>\r\n\r\n### 3 Initialize the plugin setting the callback functions:\r\n\r\n<pre><code>\r\n$.html5Loader({\r\n\t\t\tfilesToLoad:\t\t'../js/files.json', // this could be a JSON or simply a javascript object\r\n\t\t\tonBeforeLoad:       function () {},\r\n\t\t\tonComplete:         function () {},\r\n\t\t\tonElementLoaded:    function ( obj, elm) { },\r\n\t\t\tonUpdate:           function ( percentage ) {}\t\t\r\n});\t\r\n\r\n</code></pre>\r\n\r\n\r\n# API \r\n## Methods\r\n- <code>onBeforeLoad</code> It is triggered before the loading process starts\r\n- <code>onComplete</code> It is triggered when the plugin finishes to load all the sources\r\n- <code>onMediaError</code> This function is invoked in case of any error occurred during the media element fetch\r\n \t- <code>obj</code> original object passed to the plugin\r\n\t- <code>elm</code> html output (for type \"SCRIPT\" and \"TEXT\" this value is just a string)\r\n- <code>onElementLoaded</code> It is triggered anytime a new element of the json array is loaded, (ATTENTION IF AN ELEMENT IS NOT SUPPORTED IT WILL NEVER PASS TROUGH THIS FUNCTION). \r\n \t- <code>obj</code> original object passed to the plugin\r\n\t- <code>elm</code> html output (for type \"SCRIPT\" and \"TEXT\" this value is just a string)\r\n- <code>onUpdate</code> it is triggered anytime new bytes are loaded\r\n\t- <code>percentage</code> the percentage currently loaded\r\n\t\r\n# KNOWN ISSUES\r\n- Internet Explorer 9 and 10 do not return any value using the method <code>canPlayType</code> on a video or audio element ( http://modernizr.com/docs/#audio ). For these browsers we don't preload any HTML5 media format\r\n- on mobile devices and on the iPad the preloading of any video or audio element is skipped because those devices can't preload those elements since a user interacts with them  \r\n\r\n# TODO LIST\r\n- create a nodejs script that is able to read files in a folder exporting the JSON file needed to preload them\r\n\r\n","google":"UA-8059670-3","note":"Don't delete this file! It's used internally to help with page regeneration."}